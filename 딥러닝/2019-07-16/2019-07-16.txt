공유 드라이브 링크 https://bit.ly/2JL8DeB 

★Adam : 학습률 자율조정
 - 매개 변수 각기 다른 학습률로
 - 모멘텀

★ 모멘턴
 - 로컬미니멈에 있는걸 글로벌미니멈(제일 낮은 미니멈)으로
   도달 하도록 하는 거

★ 퍼셉트론 - > step function -> 미분불가
★ 뉴런 -> 비선형(예, sigmoid) -> 미분 가능


<딥러닝 학습>
정확도 ↑ 속도 ↓
minimum에 근접할때는 속도를 줄여야 정확도가 올라간다.
학습 시작한지 얼마 되지 않았으면 속도 ↑ 도 상관 없음.

학습률 : minimum에 수렴하도록 하는 거


===========================================
<Anaconda Prompt command>

conda --version #버전 확인

conda update -n base conda #conda 업데이트 bug가 많아서 해주는 거

conda env list # 나의 가상환경 보는 명령어

conda create -n deeplearning numpy pandas matplotlib seaborn scikit-learn jupyter --yes

conda env list
# conda environments:
#
base                  *  C:\Users\user\Anaconda3
deeplearning             C:\Users\user\Anaconda3\envs\deeplearning # 파일 위치 잘 보기


conda activate deeplearning
(deeplearning) C:\Users\user>conda env list
# conda environments:
#
base                     C:\Users\user\Anaconda3
deeplearning          *  C:\Users\user\Anaconda3\envs\deeplearning

deactivate # 빠져 나감

conda update -n base conda-build

나갔다가 다시 들어옴
=======================================================
JetBrains PyCharm for Anaconda에서 무료 다운로드

<Anaconda Prompt command>
conda create -n mlearning numpy pandas matplotlib seaborn scikit-learn jupyter --yes

conda install -n deeplearning [pkg이름] --yes # 패키지 설치 명령어

pip install tensorflow # conda로 설치 안될 경우 명령어

# 설치안될경우 접속 후 설치
conda activate deeplearning

pip install tensorflow

ipython

import tensorflow as tf
print(tf.__version__)
exit()

pip install keras

ipython

import keras
-> using tensorflow backend.나오는지 확인
exit()

===============================================

01_My_First_Deeplearning은 다음 경로에 복붙
C:\Users\user\PycharmProjects\deeplearning

ThoraricSurgery.csv은 다음 경로에 복붙
C:\Users\user\PycharmProjects\deeplearning\dataset

===============================================

<Anaconda Prompt command>

(base) C:\Users\user>jupyter notebook --no-browser
[I 14:37:49.242 NotebookApp] JupyterLab extension loaded from C:\Users\user\Anaconda3\lib\site-packages\jupyterlab
[I 14:37:49.242 NotebookApp] JupyterLab application directory is C:\Users\user\Anaconda3\share\jupyter\lab
[I 14:37:49.242 NotebookApp] Serving notebooks from local directory: C:\Users\user
[I 14:37:49.242 NotebookApp] The Jupyter Notebook is running at:
[I 14:37:49.242 NotebookApp] http://localhost:8888/?token=dbca6bedcc184178eb58904ccc1c4c846fce9cc5787ece49
[I 14:37:49.242 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 14:37:49.273 NotebookApp]

    To access the notebook, open this file in a browser:
        file:///C:/Users/user/AppData/Roaming/jupyter/runtime/nbserver-4580-open.html
    Or copy and paste one of these URLs:
        http://localhost:8888/?token=dbca6bedcc184178eb58904ccc1c4c846fce9cc5787ece49

마지막 http://localhost:8888/?token=dbca6bedcc184178eb58904ccc1c4c846fce9cc5787ece49
링크 복사에서 접속

===============================================
<Anaconda Prompt command>
C:\Users\user\.jupyter에 jupyter_notebook_config없으면 다음 명령어 시도
jupyter notebook --generate-config

C:\PythonWorkspace 이 폴더 없으면 만들어주기

메모장으로 열어서 다음과 같이 수정후 저장
## The directory to use for notebooks and kernels.
c.NotebookApp.notebook_dir = 'C:\PythonWorkspace'

===============================================

C:\PythonWorkspace에 
dataset폴더랑 01_My_First_Deeplearning.py 붙여 넣기

===============================================
<개념>
★ Tensorflow ( 엔진 ) 을 keras가 추상화

===============================================
코드의 관용적 표현
 x,y -> vector(1차원)
 X,Y -> matrix(2차원)

x,X -> feature (input vars, attribute)
y,Y -> label, target (prediction)
===============================================
<분포 관련 알아둬야 하는 개념(통계,연구, 프로젝트 시 도움될 예정) - 차이점>
균등분포
정규분포
카이제곱분포
t분포
포아송 분포
===============================================
<딥러닝 처리 과정>
수집/전처리 : 전체의 60%이상
분석 : 40%정도

데이터 품질에 영향을 주는 결측값과 이상치
조작, 변환, 변화 → merge, group by (기술통계)
시각화 하는 이유 ? 전체적인 직관(빠른 판단), 
		숲을 보고자, 두드러진 특징 비교하기 위해

정규분포를 따르지 않으면 가정에서 벗어나 오차 많아짐.
따라서 histogram이 정규분포를 따르지 않으면
데이터 변환(scaling, 제거, 대처)를 해줌

수집 → 전처리 ,조작('결측값' 처리(제거, 대체))
			제거 : 평균,중간,최빈값들 이용해서 제거
			대체 : 최근접이웃KNN 이용해 결측값을 보완
		Boxplot이용해 '이상치(outlier)' 유무 파악해 제거하거나 대체
			대체 : 정상치의 mean값 or max값 
	→ 분석(통계, ML)
		초보자의 경우 클래스보다 함수로 접근


===============================================
python unpack operator function 구글링해서 공부하기

===============================================
overfitting(학습된 데이터에 최적합, 새로운 데이터 처리에 적합하지 않음) 되지 않도록
즉, 일반화 해결위해 규제가 되는 선형 모형(Ridge, Lasso-통계관련 개념)
규제가 적용된 선형 모델
벡터 노름에 L1, L2를 가져다가 쓴 개념이 
	Ridge(0이되서 변수에 가깝게 되는 거), 
	Lasso(0에 가깝게 가는거)
다중 공선심 문제(완전 독립된 변수란 없음. 컬럼끼리 어느정도 관계있는 경우가 많음)

===============================================

- 